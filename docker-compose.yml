services:
  mongo:
    image: mongo:7
    container_name: morrochat-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: morrochat
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db

  chromadb:
    image: chromadb/chroma:latest
    container_name: morrochat-chromadb
    restart: unless-stopped
    environment:
      IS_PERSISTENT: 'TRUE'
      PERSIST_DIRECTORY: /chroma/.chroma/index
      CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER: 'chromadb.auth.providers.NoAuthServerProvider'
    ports:
      - '8000:8000'
    volumes:
      - chroma_data:/chroma/.chroma/index

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: morrochat-backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      MONGODB_URI: mongodb://root:example@mongo:27017/morrochat?authSource=admin
      NODE_ENV: production
      CHROMA_URL: http://chromadb:8000
    depends_on:
      - mongo
      - chromadb
    ports:
      - '3000:3000'

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    container_name: morrochat-logstash
    restart: unless-stopped
    volumes:
      - ./backend/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - "5044:5044"
      - "5000:5000"
    depends_on:
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: morrochat-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
    ports:
      - '5173:80'
    depends_on:
      - backend

volumes:
  mongo_data:
  chroma_data:
